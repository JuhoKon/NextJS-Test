{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport redis from \"redis\";\n\nclass SRedis {\n  constructor() {\n    _defineProperty(this, \"redisClient\", void 0);\n\n    const options = {\n      port: parseInt(process.env.REDIS_PORT),\n      host: process.env.REDIS_HOST\n    };\n    const redisClient = redis.createClient(options);\n    this.redisClient = redisClient;\n  }\n\n  static getInstance() {\n    if (!SRedis.instance) {\n      SRedis.instance = new SRedis();\n    }\n\n    return SRedis.instance;\n  }\n\n  setKey(id, value) {\n    const timeToStoreSeconds = 60;\n    this.redisClient.setex(id, timeToStoreSeconds, JSON.stringify(value));\n  }\n\n  async getValue(id) {\n    return new Promise((resolve, reject) => {\n      this.redisClient.get(id, (err, reply) => {\n        if (reply) {\n          resolve(JSON.parse(reply));\n        }\n\n        if (err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n}\n\n_defineProperty(SRedis, \"instance\", void 0);\n\nexport default SRedis;","map":null,"metadata":{},"sourceType":"module"}